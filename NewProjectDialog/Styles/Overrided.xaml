<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style BasedOn="{x:Null}" TargetType="{x:Type Window}">
    </Style>

    <Style TargetType="{x:Type Grid}">

    </Style>

    <Style BasedOn="{x:Null}" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#FFF1F1F1"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="Background" Value="#3F3F46"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#3F3F46"/>
        <Setter Property="Padding" Value="2,1,1,1"/>
        <Setter Property="Border.CornerRadius" Value="0"/>
        <Setter Property="Margin" Value="0,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" RenderOptions.ClearTypeHint="Enabled"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#3399FF" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#3F3F46" />
                        </Trigger>-->
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#3399FF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0"  BorderBrush="{TemplateBinding Background}" Name="border">
                        <TextBox Style="{x:Null}"
                                 Foreground="{TemplateBinding Foreground}"
                                 Background="{TemplateBinding Background}"
                                 Padding="{TemplateBinding Padding}"
                                 Text="{TemplateBinding Text}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            -->
        <!--<Setter TargetName="border" Property="Corne" Value="#3399FF" />-->
        <!--
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            -->
        <!--<Setter TargetName="border" Property="BorderBrush" Value="#3F3F46" />-->
        <!--
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}">
        <!--<Setter Property="Foreground" Value="{DynamicResource MainForegroundColor}"/>-->
    </Style>

    <Style BasedOn="{x:Null}" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{DynamicResource MainBackgroundColorLight}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style BasedOn="{x:Null}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource MainForegroundColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{x:Null}" TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="#999999"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Margin" Value="0,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="{TemplateBinding Background}">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
                                <Path Width="8" Height="9" x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="{TemplateBinding Foreground}" Fill="{TemplateBinding Foreground}" StrokeThickness="1" Data="M 1,3 1,5 4,8 8,4 8,2 4,6 1,3 z" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}" Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#F1F1F1" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="#F1F1F1"/>
                        </Trigger>
                        <!--<Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#F1F1F1" />
                        </Trigger>
                        <!--<Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                        </Trigger>-->
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                            <Setter Property="Foreground" Value="#F1F1F1"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--!!!!!!!!!!!!!!!-->

    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="Margin" Value="0,3"/>
        <Setter Property="Padding" Value="0,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="18" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border"
                                Grid.ColumnSpan="2"
                                CornerRadius="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1" />
                        <Path x:Name="Arrow"
                              Grid.Column="1"    
                              Margin="5,8"
                              Fill="{TemplateBinding Foreground}"
                              Stroke="{TemplateBinding Foreground}"
                              Data="{DynamicResource DownArrowGeometry}"/>
                        <!--<Path Name="Arrow"
                  Grid.ColumnSpan="2"
                  Margin="3,1,8,0"
                  Fill="{TemplateBinding Foreground}"
                  Data="{DynamicResource DownArrowGeometry}"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center" IsHitTestVisible="False"/>-->
                    </Grid>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="LightGray" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                            <Setter Property="Foreground" Value="Gray"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="True" />
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBackgroundColor}" />
        <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource MainForegroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" >

                        <TextBlock>
                            <ContentPresenter />
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray"/>
                            <Setter TargetName="Border" Property="Background" Value="Yellow"/>
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MainBackgroundColorLight}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource LinkButtonColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderColor}" />
        <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource MainForegroundColor}" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                Focusable="True"   
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        BorderThickness="0"/>
                                <ScrollViewer Margin="0" SnapsToDevicePixels="True" VerticalScrollBarVisibility="Hidden">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <!--<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>-->
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>





    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3 4 L 6 0 Z</Geometry>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource MainBackgroundColorDark}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="{TemplateBinding Background}" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridEditingComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="1,1" />
    </Style>

</ResourceDictionary>